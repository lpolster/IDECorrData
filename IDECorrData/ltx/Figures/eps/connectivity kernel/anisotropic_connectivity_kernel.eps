%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.13.0.564 (R2011b). Operating System: Microsoft Windows XP.
%%Title: C:\Documents and Settings\lpolster\IDECorrData\ltx\Figures\eps\connectivity kernel\anisotropic_connectivity_kernel.eps
%%CreationDate: 01/04/2013  14:38:01
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:     0    -1   341   340
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:     0    -1   341   340
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0000 4080 csm

    0     0  4094  4094 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 4095 4095 rf
6 w
0 2476 2477 0 0 -2476 604 3213 4 MP
PP
-2477 0 0 2476 2477 0 0 -2476 604 3213 5 MP stroke
gs 604 737 2478 2477 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    00008f 00009f 0000af 0000bf 0000cf 0000df 0000ef 0000ff 000fff 001fff 
    002fff 003fff 004fff 005fff 006fff 007fff 008fff 009fff 00afff 00bfff 
    00cfff 00dfff 00efff 00ffff 0fffef 1fffdf 2fffcf 3fffbf 4fffaf 5fff9f 
    6fff8f 7fff7f 8fff6f 9fff5f afff4f bfff3f cfff2f dfff1f efff0f ffff00 
    ffef00 ffdf00 ffcf00 ffbf00 ffaf00 ff9f00 ff8f00 ff7f00 ff6f00 ff5f00 
    ff4f00 ff3f00 ff2f00 ff1f00 ff0f00 ff0000 ef0000 df0000 cf0000 bf0000 
    af0000 9f0000 8f0000 7f0000 
  >
] setcolorspace } bdef mwscm
gs np 604 737 mt 0 2477 rl 2478 0 rl 0 -2477 rl cp c np
[2537 0 0 2537 575 707] cc
<< % Image dictionary
  /ImageType 1
  /Width 41 /Height 41
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [41.000000 0 0 41.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
arp="k907;lQH$IqBGbZmNDENoHO2VnK@`Qr$(t^r$)%^oH=)Ur?D.arZqCdr?D1`p)s;WrZ_=dp*BV^
rZ_:apE9GYrZV@f,Q8t`-2o.j,:!13rZV%ZrZV7b"!]$9,kNAb,U=TZrZ_=bqB5b\rZVFh,:"Q3-2o1e
,m,D<,:!13rZV.]rZMCg+sS<Xr$;@h,Q&_d,:*46"XG?<,9e?2+oEJ^+UoV>,9nH[,pjrb,U+?PrYu%]
+!DjSrZq^n,U4NX,5rba+T<N"+sJ6W,pjrd-7'iW)AWu!',;?(+<i*1,m5J=,9e?2+oWV`+W)CI,:"Q^
-R^Aj,Tdj9$j[(C$4dgh+!N!0,m5J<,9e?2+TW].rZMaq+sS?Z-RgMq.3olH$3U5,"U#2H)B^:(,m5J=
,9e?2+TW].rZM^p,9nK].4d))/LDGK#5\B(!Xf\^+XI%5"!f*8,5r`#+<VgN+sJ6W,q(8s1Gpp;*YAY\
"U+c("9]5P+!^b2*[DsT+sJ0R+<VgN+sJ6W-7LN%3'0)R+r1_&(Dm_frW!$-'ceLt,p"<V,9e<T+WqmN
+X/*T,UOuo2*4#c1aa4[+=Sic&H2Z)#88($,UF`^,U4KW+X%sN+X&$R,:"Wd0/bsX5;jr3*%!Bt.2;j`
!!X&U+s\H\,U=TY+sA*P+<_mP+sS?[.PEY@5<UhN)]9bI/0YZ)!$qj`*$QXS,pX`\+sJ0R+<VgN+sJ6W
-7LN%3'0)R+r1_&(Dm_frW!$-'ceLt,oe0T,9e<T+WqmN+X/*T,UFih0/GI@.NT0-"9er,!!EE8(`t"%
,mYb@,9e<T+Wqp,+UoV?,:+Zc/1rS--6*R$qZ$d$$PXR(,lT(l,U4KWrZM:b+T<Mo+sJ6W,pt,k.k)_`
'++j?!!NK5',hu<rZq[m,U4KWrZM:b+T<N$+sJ6W,pjuf-mp8^(_R5_#6tSH'H/&;,lT(m,U4NX,5rbb
+T<N"+sJ6W,pjrd-7'iW)AWu!',;?(+<i*1,m5J=,9e?2+oNP_+UoV>,9nH[,pjrb,U+?PrYu%]+!DjS
rZq^n,U4NX,5rb`+T<Me+sJ6V,lAqh,U<42!@&lg,m>P>,9nBVrZV.]rZV7b"!]$9,l8ne,l8ki,U=TZ
rZ_=bqB5b\rZVFh,:"Q,,m,D<,:!13rZV%ZrZV7b!@&ig,kr\b,QT,7rZ_=bpE9DXrZ_=dp*BV^rZ_:a
p)s;Wr?D.arZqCdr?D1`oH=&Tr$(t^r$)%^nK@`QoHO2VmND?LqBGbZlQG[?k90C?arl3
~>
gr
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 180 FMSR

1587 3602 mt 
(Space) s
 170 2231 mt  -90 rotate
(Space) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 587 3256 mt 
( ) s
3065  779 mt 
( ) s
4 w
DO
SO
6 w
 604  737 mt 3081  737 L
 604 3213 mt 3081 3213 L
3081 3213 mt 3081  737 L
 604 3213 mt  604  737 L
 604 3213 mt 3081 3213 L
 604 3213 mt  604  737 L
 604 3213 mt  604 3188 L
 604  737 mt  604  762 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 180 FMSR

 400 3415 mt 
(-10) s
1843 3213 mt 1843 3188 L
1843  737 mt 1843  762 L
1793 3415 mt 
(0) s
3081 3213 mt 3081 3188 L
3081  737 mt 3081  762 L
2981 3415 mt 
(10) s
 604 3213 mt  629 3213 L
3081 3213 mt 3056 3213 L
 265 3279 mt 
(-10) s
 604 1975 mt  629 1975 L
3081 1975 mt 3056 1975 L
 470 2041 mt 
(0) s
 604  737 mt  629  737 L
3081  737 mt 3056  737 L
 370  803 mt 
(10) s
 604  737 mt 3081  737 L
 604 3213 mt 3081 3213 L
3081 3213 mt 3081  737 L
 604 3213 mt  604  737 L
1 sg
0 2477 240 0 0 -2477 3261 3214 4 MP
PP
-240 0 0 2477 240 0 0 -2477 3261 3214 5 MP stroke
gs 3261 737 241 2478 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    00008f 00009f 0000af 0000bf 0000cf 0000df 0000ef 0000ff 000fff 001fff 
    002fff 003fff 004fff 005fff 006fff 007fff 008fff 009fff 00afff 00bfff 
    00cfff 00dfff 00efff 00ffff 0fffef 1fffdf 2fffcf 3fffbf 4fffaf 5fff9f 
    6fff8f 7fff7f 8fff6f 9fff5f afff4f bfff3f cfff2f dfff1f efff0f ffff00 
    ffef00 ffdf00 ffcf00 ffbf00 ffaf00 ff9f00 ff8f00 ff7f00 ff6f00 ff5f00 
    ff4f00 ff3f00 ff2f00 ff1f00 ff0f00 ff0000 ef0000 df0000 cf0000 bf0000 
    af0000 9f0000 8f0000 7f0000 
  >
] setcolorspace } bdef mwscm
gs np 3261 737 mt 0 2477 rl 240 0 rl 0 -2477 rl cp c np
[240 0 0 2477 3261 737] cc
<< % Image dictionary
  /ImageType 1
  /Width 1 /Height 64
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [1.000000 0 0 64.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
5<h=p4?GSa3&``Q1c$mA0J>%1/1W2!-mp>f,U4KV+<MXF*#fe6(`*r&'GD)k&.]6[$k!CK#R:P;"9S]+
!.Y
~>
gr
gr

4 w
DO
SO
6 w
0 sg
3261  737 mt 3501  737 L
3261 3214 mt 3501 3214 L
3501 3214 mt 3501  737 L
3261 3214 mt 3261  737 L
3261 3214 mt 3501 3214 L
3501 3214 mt 3501  737 L
3501 3214 mt 3476 3214 L
3261 3214 mt 3285 3214 L
3535 3280 mt 
(-10) s
3501 2594 mt 3476 2594 L
3261 2594 mt 3285 2594 L
3535 2660 mt 
(-5) s
3501 1975 mt 3476 1975 L
3261 1975 mt 3285 1975 L
3535 2041 mt 
(0) s
3501 1356 mt 3476 1356 L
3261 1356 mt 3285 1356 L
3535 1422 mt 
(5) s
3501  737 mt 3476  737 L
3261  737 mt 3285  737 L
3535  803 mt 
(10) s
3261  737 mt 3501  737 L
3261 3214 mt 3501 3214 L
3501 3214 mt 3501  737 L
3261 3214 mt 3261  737 L

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
